from aiogram import Router
from aiogram.types import Message
from aiogram.filters import CommandStart, Command    # CommandStart (/start), Command (–ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã)
from aiogram.fsm.state import State, StatesGroup      # —Å–æ—Å—Ç–æ—è–Ω–∏—è (–¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö)
from aiogram.fsm.context import FSMContext            # –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–π

import pandas as pd
pd.set_option('display.expand_frame_repr', False)   # –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ç–æ–ª–±—Ü—ã –±–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤

import asyncio


from datetime import datetime, timedelta

import concurrent.futures
# concurrent.futures —É–ø—Ä–æ—â–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∫–æ–¥–∞, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏
# –∏ —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞–º–∏ –∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏. –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
# –∏ —É—Å–∫–æ—Ä–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ.

from aiogram import Bot
import app.keyboards as kb
import result_date_time as result    # result_date_time(selected_procedure, selected_place)
import set_schedule as ss
from app.globals import global_state

router = Router()     # –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π



# –í–≤–æ–¥–∏–º –∫–ª–∞—Å—Å—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏—Ö—Å—è –≤ –∫–æ–¥–µ –∏ –ø—Ä–∏–Ω–∏–º–∞—é—â–∏—Ö –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class User(StatesGroup):
    user_name = State()
    user_acc = State()
class ProcedureSelection(StatesGroup):
    procedure = State()
class PlaceSelection(StatesGroup):
    place = State()
class DateTimeSelection(StatesGroup):
    date_time = State()
class PhoneNumberSelection(StatesGroup):
    phone = State()
class AddNote(StatesGroup):
    add_note = State()
    note = State()

# –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±–æ—Ç–∞
procedures = ['–ú–µ–∂—Ä–µ—Å–Ω–∏—á–∫–∞', '–í–æ–ª–æ—Å–∫–∏', '–ì–∏–ø–µ—Ä—Ä–µ–∞–ª–∏–∑–º', '–ü—É–¥—Ä–æ–≤–æ–µ']
places = ['–ó–≤–µ–∑–¥–Ω–∞—è', '–ü—É—à–∫–∏–Ω']
dt = []                          # –ø—É—Å—Ç–æ–π –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
add_note_answers = ["–í–≤–µ—Å—Ç–∏ –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ", "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–ø–∏—Å—å"]
veron_chat_id = '1462946426'        # id —á–∞—Ç–∞ –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π –æ –∑–∞—è–≤–∫–∞—Ö
places_url = {
                '–ó–≤–µ–∑–¥–Ω–∞—è': 'https://dikidi.ru/ru/record/658559?p=4.pi-po-sm-ss-sd&o=1&m=1505103&s=5918615&rl=0_0&source=widget',
                '–ü—É—à–∫–∏–Ω': 'https://dikidi.net/686867?p=2.pi-ssm-sd&o=10&m=2352562&s=10102456&rl=0_undefined'
              }
gsheet_schedule_url = 'https://docs.google.com/spreadsheets/d/1ICEBZr97FBnjnBRqb-rAxkIZn_o_tRjhjQJ_PhPoVdw/edit#gid=1468526436'

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
last_message_time_dict = {}
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–º, –±—ã–ª–æ –ª–∏ —É–∂–µ –ø–æ–∫–∞–∑–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
message_shown = {}


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø–æ—Å–ª–µ 5-–º–∏–Ω—É—Ç–Ω–æ–π –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

async def clean_up_user_states(user_id, bot, state):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ —É–∂–µ –ø–æ–∫–∞–∑–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if not message_shown.get(user_id):          # –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ message_shown.get(user_id) –Ω–µ —Ä–∞–≤–Ω–æ True...
                                                # -> –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        global dt
        dt = []  # –æ—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–∞—Ç –∏ –≤—Ä–µ–º–µ–Ω–∏
        if state is not None:     # –ø—Ä–æ–≤–µ—Ä—è–µ–º state –Ω–∞ None (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–π state = None, –ø–æ—Ç–æ–º –Ω–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ handlers.py)
            await state.clear()   # –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è

        await bot.send_message(user_id, "üî∫ –í—ã –Ω–µ –æ—Ç–≤–µ—á–∞–ª–∏ –±–æ–ª–µ–µ 5 –º–∏–Ω—É—Ç. –í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—á–∏—â–µ–Ω—ã üôå\n\n"
                                                "üîπ –ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ,\n"
                                                "–Ω–∞–∂–º–∏—Ç–µ -> /start\n"
                                                "üîπ –ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —É—Å–ª—É–≥–∞–º,\n"
                                                "–Ω–∞–∂–º–∏—Ç–µ -> /info", reply_markup=kb.ReplyKeyboardRemove())
        message_shown[user_id] = True    # –ø–æ–º–µ—á–∞–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –ø–æ–∫–∞–∑–∞–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async def check_inactive_users(bot, global_state):

    while True:                                                               # –∑–∞–ø—É—Å–∫–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª while true
        await asyncio.sleep(60)                                                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

        current_time = datetime.now()                                         # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        for user_id, last_message_time in last_message_time_dict.items():     # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ —Å–ª–æ–≤–∞—Ä—é —Å –≤—Ä–µ–º–µ–Ω–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            if current_time - last_message_time > timedelta(seconds=300):      # –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 10 —Å–µ–∫—É–Ω–¥
                await clean_up_user_states(user_id, bot, global_state)      # –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π


@router.message(CommandStart())                                # –ª–æ–≤–∏—Ç –∫–æ–º–∞–Ω–¥—É /start
async def start(message: Message, bot, state: FSMContext):     # –æ–ø–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –æ—Ç —é–∑–µ—Ä–∞, —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –æ—Ç –±–æ—Ç–∞, —Å–º–µ–Ω–∞–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    global global_state
    global_state = state                                       # –æ–±–Ω—É–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ


    print("–ë–æ—Ç –Ω–∞—á–∞–ª –æ–±—â–µ–Ω–∏–µ.")
    global dt
    print(f"===== dt –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ start = {dt}")
    dt = []                                                    # –æ—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–∞—Ç –∏ –≤—Ä–µ–º–µ–Ω–∏
    print(f"===== dt –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ start –∏ –æ—á–∏—Å—Ç–∫–∏ = {dt}")

    await state.set_state(User.user_name)                      # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–Ω–æ–π (–ø–æ–∫–∞ –ø—É—Å—Ç–∞—è)
    await state.set_state(User.user_acc)                       # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–Ω–æ–π (–ø–æ–∫–∞ –ø—É—Å—Ç–∞—è)
    user = message.from_user
    user_name = user.first_name                                # –∏–∑ –æ–±—ä–µ–∫—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —é–∑–µ—Ä–∞ –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –µ–≥–æ –∏–º—è

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    global message_shown
    message_shown[user.id] = False                             # –æ–±–Ω—É–ª—è–µ–º —Ñ–ª–∞–≥ –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å—Ç–∞–≤–∏–º - –ù–ï –ü–û–ö–ê–ó–ê–ù–û)

    global last_message_time_dict
    last_message_time_dict[message.chat.id] = datetime.now()   # –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    await state.set_state(ProcedureSelection.procedure)        # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥—Ä—É–≥–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    await bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {user_name}!\n–Ø –ø–æ–º–æ–≥—É –í–∞–º –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º –∫ –º–∞—Å—Ç–µ—Ä—É –í–µ—Ä–æ–Ω–∏–∫–µ.")

    keyboard_procedures = kb.create_keyboard_procedures(procedures)             # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (—Ñ-—Ü–∏—è –∏–∑ —Ñ–∞–π–ª–∞ keyboards.py)
    await bot.send_message(message.chat.id, f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—É —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ üìùüëá", reply_markup=keyboard_procedures)
            # –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É Reply (–∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É) - –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –≤—ã—Å—ã–ª–∞–µ—Ç—Å—è –≤ —á–∞—Ç —Ç–µ–∫—Å—Ç —Å –∫–Ω–æ–ø–∫–∏


@router.message(Command('info'))       # –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∂–µ—Ç –∫–æ–º–∞–Ω–¥—É /info - –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ
async def info_(message: Message, bot, state: FSMContext):

    global global_state
    global_state = state     # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    global dt
    dt = []  # –æ—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–∞—Ç –∏ –≤—Ä–µ–º–µ–Ω–∏
    await state.clear()  # –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    global last_message_time_dict
    last_message_time_dict[message.chat.id] = datetime.now()

    await bot.send_message(message.chat.id, f"–ú–æ–∏ —É—Å–ª—É–≥–∏:\n"
                                            f"‚ú®–ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±—Ä–æ–≤–µ–π –¢–µ—Ö–Ω–∏–∫–∏ ¬´–ì–∏–ø–µ—Ä—Ä–µ–∞–ª–∏–∑–º¬ª / ¬´–≤–æ–ª–æ—Å–∫–∏ + —Ç–µ–Ω—å¬ª / ¬´–º–∏–∫—Äo–±–ªe–π–ª–∏–Ω–≥¬ª - 10000‚ÇΩ\n"
                                            f"‚ú® –ü–µ—Ä–º–∞–Ωe–Ω—Ç–Ω—ã–π –ºa–∫–∏—è–∂ T–µx–Ω–∏–∫a ¬´–ø—É–¥—Ä–æ–≤–æ–µ –Ωa–ø—ã–ªe–Ω–∏–µ –±—Äo–≤e–π¬ª - 8000‚ÇΩ\n"
                                            f"‚ú® –º–µ–∂—Ä–µ—Å–Ω–∏—á–∫–∞ (–∫–ª–∞—Å—Å–∏–∫–∞) - 6000 ‚ÇΩ\n\n"
                                            
                                            f"‚ú® –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —á–µ—Ä–µ–∑ 1-2 –º–µ—Å—è—Ü–∞:\n"
                                            f"‚ñ™Ô∏è –¢–µ—Ö–Ω–∏–∫–∞ –≤–æ–ª–æ—Å–∫–∏ + —Ç–µ–Ω—å / –¢–µ—Ö–Ω–∏–∫–∞ –ø—É–¥—Ä–æ–≤–æ–µ –Ω–∞–ø—ã–ª–µ–Ω–∏–µ –±—Ä–æ–≤–µ–π ‚Äì 4000/3000 ‚ÇΩ\n"
                                            f"‚ñ™Ô∏è–ú–µ–∂—Ä–µ—Å–Ω–∏—á–∫–∞ (–∫–ª–∞—Å—Å–∏–∫–∞) - 2000 ‚ÇΩ.\n\n"
                                            
                                            f"–ü—Ä–∏–Ω–∏–º–∞—é –≤ –≥. –ü—É—à–∫–∏–Ω –∏–ª–∏ –ø–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –∫–æ–≤–æ—Ä–∫–∏–Ω–≥–µ –º–µ—Ç—Ä–æ –ú–æ—Å–∫–æ–≤—Å–∫–∞—è/–ó–≤–µ–∑–¥–Ω–∞—è ‚ù§Ô∏è\n", reply_markup=kb.ReplyKeyboardRemove())

    await bot.send_message(message.chat.id, f"–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —É –í–µ—Ä–æ–Ω–∏–∫–∏, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü–µ—Ä–µ–π—Ç–∏ –∫ —á–∞—Ç—É'", reply_markup=kb.create_keyboard_chat_veron())
    await asyncio.sleep(5)  # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –≤ 5 —Å–µ–∫—É–Ω–¥
    await bot.send_message(message.chat.id, f"–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏—ë–º, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ -> '/start' üòâüòò")

    @router.message(lambda message: message.text not in ['/start', '/info'])
    async def handle_other_messages(message: Message):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –∫—Ä–æ–º–µ "/start" –∏ "/info"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.answer(f"–ü—Ä–æ—Å—Ç–∏—Ç–µ, –º–Ω–µ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –æ–±—â–∞—Ç—å—Å—è –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –∏–ª–∏ –ù–ï –ø–æ —Ç–µ–º–µ.\n"
                             f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –º–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã—à–µ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç üíÅ‚Äç‚ôÇÔ∏è")

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        global last_message_time_dict
        last_message_time_dict[message.chat.id] = datetime.now()

@router.message(ProcedureSelection.procedure)                  # –ª–æ–≤–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–∑ state
async def process_procedure_choice(message: Message, bot, state: FSMContext):

    global global_state
    global_state = state    # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    global last_message_time_dict
    last_message_time_dict[message.chat.id] = datetime.now()
    global message_shown


    if message.text not in procedures and message_shown[message.chat.id] == False:                         # –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –ø–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —é–∑–µ—Ä–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ, —Å—Ä–∞–≤–Ω–∏–≤–∞—è —Å–æ —Å–ø–∏—Å–∫–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        await bot.send_message(message.chat.id, f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫ üëá")
    elif message_shown[message.chat.id] == True:
        await bot.send_message(message.chat.id, f"–í–∞—Å –Ω–µ –±—ã–ª–æ –±–æ–ª—å—à–µ 5 –º–∏–Ω—É—Ç üíî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–ø–∏—Å—å –∑–∞–Ω–æ–≤–æ \n-> /start")
    else:
        selected_procedure = message.text                      # –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –û–ö, —Ç–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π

        await state.update_data(user_name=message.from_user.first_name)    # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–º—è –≤ —Å–ª–æ–≤–∞—Ä—å —Å–æ—Å—Ç–æ—è–Ω–∏–π (–ø–æ–ª—É—á–∏–ª–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —é–∑–µ—Ä–∞)
        await state.update_data(user_acc=message.from_user.username)              # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º user_acc  –≤ —Å–ª–æ–≤–∞—Ä—å —Å–æ—Å—Ç–æ—è–Ω–∏–π (–ø–æ–ª—É—á–∏–ª–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —é–∑–µ—Ä–∞)
        await state.update_data(procedure=selected_procedure)              # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø—Ä–æ—Ü–µ–¥—É—Ä—É –≤ —Å–ª–æ–≤–∞—Ä—å —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await state.set_state(PlaceSelection.place)                        # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–∏ÃÜ

        keyboard_places = kb.create_keyboard_places(places)
        await bot.send_message(message.chat.id, f"–í—ã–±—Ä–∞–Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞: {selected_procedure}. –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ üß≠üëá", reply_markup=keyboard_places)

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        last_message_time_dict[message.chat.id] = datetime.now()


@router.message(PlaceSelection.place)
async def process_place_choice(message: Message, bot, state: FSMContext):

    global global_state
    global_state = state   # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    global last_message_time_dict
    last_message_time_dict[message.chat.id] = datetime.now()
    global message_shown

    if message.text not in places and message_shown[message.chat.id] == False:
        await bot.send_message(message.chat.id, f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫ üëá")
    elif message_shown[message.chat.id] == True:
        await bot.send_message(message.chat.id,
                               f"–í–∞—Å –Ω–µ –±—ã–ª–æ –±–æ–ª—å—à–µ 5 –º–∏–Ω—É—Ç üíî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–ø–∏—Å—å –∑–∞–Ω–æ–≤–æ \n-> /start")
    else:
        selected_place = message.text
        await state.update_data(place=selected_place)
        await state.set_state(DateTimeSelection.date_time)

        await bot.send_message(message.chat.id, f"–í—ã–±—Ä–∞–Ω–æ –º–µ—Å—Ç–æ: {selected_place}. \n–°–µ–π—á–∞—Å —Å–≤–µ—Ä—é –≥—Ä–∞—Ñ–∏–∫ –∏ –≤–µ—Ä–Ω—É—Å—å –∫ –í–∞–º (–≤ —Ç–µ—á–µ–Ω–∏–µ 15-30 —Å–µ–∫—É–Ω–¥), –≤—ã–±–µ—Ä–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø—Ä–æ—Ü–µ–¥—É—Ä—ã üèÉ‚Äç‚ôÇÔ∏è‚Äç‚û°Ô∏è", reply_markup=kb.ReplyKeyboardRemove())

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º –∏ —ç–º–æ–¥–∑–∏ - –ø–µ—Å–æ—á–Ω—ã–µ —á–∞—Å—ã
        await bot.send_message(message.chat.id, "\U000023F3")

        data = await state.get_data()

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å —Ç–∞–∏ÃÜ–º–∞—É—Ç–æ–º (–∑–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è)
        with concurrent.futures.ThreadPoolExecutor() as executor:
            future = executor.submit(result.result_date_time, data["procedure"], data["place"])  # –ø–µ—Ä–µ–¥–∞—ë–º –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–æ—Ç–¥–µ–ª—å–Ω–æ)
            wait_time = 60            # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
            try:
                df_final = future.result(timeout=wait_time)    # –µ—Å–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ-—Ü–∏–∏ –Ω–µ –∏—Å—Ç–µ—á–µ–Ω–æ, —Ç–æ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            except concurrent.futures.TimeoutError:             # –µ—Å–ª–∏ —Ç–∞–π–º–∞—É—Ç –ø—Ä–µ–≤—ã—à–µ–Ω - –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∏ –∏—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                future.cancel()                                 # –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
                await bot.send_message(message.chat.id,
                    "‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–≤—ã—à–µ–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏ ü§∑‚Äç‚ôÇÔ∏è\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –ø–æ–ø–æ–∑–∂–µ üôè\n"
                    "–ß—Ç–æ–±—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞ - –≤—ã–±–µ—Ä–∏—Ç–µ '–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞' –∏–∑ –º–µ–Ω—é –°–õ–ï–í–ê –≤ —Å—Ç—Ä–æ–∫–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π üëà")
                # global dt
                # dt = []  # –æ—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–∞—Ç –∏ –≤—Ä–µ–º–µ–Ω–∏
                await state.clear()  # –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                return                                         # –∑–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º—ã (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞ –∏–∑ TG)
            except Exception as e:                             # –µ—Å–ª–∏ —Ñ-—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ –æ—à–∏–±–∫—É (—Å–±–æ–π), —Ç–æ –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–∞–∫–∂–µ
                print(e)
                await bot.send_message(message.chat.id,
                    "‚ùå –í –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –í–æ–∑–º–æ–∂–Ω–æ, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏ ü§∑‚Äç‚ôÇÔ∏è\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –ø–æ–ø–æ–∑–∂–µ üôè\n"
                    "–ß—Ç–æ–±—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞ - –≤—ã–±–µ—Ä–∏—Ç–µ '–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞' –∏–∑ –º–µ–Ω—é –°–õ–ï–í–ê –≤ —Å—Ç—Ä–æ–∫–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π üëà")
                # global dt
                # dt = []  # –æ—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–∞—Ç –∏ –≤—Ä–µ–º–µ–Ω–∏
                await state.clear()  # –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                return                                         # –∑–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º—ã (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞ –∏–∑ TG)


                # –ï—Å–ª–∏ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ result.result_date_time –Ω–µ –±—ã–ª–æ, —Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–¥ –¥–∞–ª—å—à–µ:
            global dt  # –æ–±—ä—è–≤–ª—è–µ–º, —á—Ç–æ –±–µ—Ä–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é dt

            # –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –ø—É—Å—Ç–æ–π –¥–∞—Ç–∞—Ñ—Ä–µ–µ–π–º df_final (–≤—Å—ë –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–æ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º "–ø—É—Å—Ç—ã–º"

            # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º "–ø—É—Å—Ç—ã–º"
            is_empty = df_final.replace("", pd.NA).dropna(axis=0, how='all').empty

            if is_empty:
                print('–§–∏–Ω–∞–ª—å–Ω—ã–π –¥–∞—Ç–∞—Ñ—Ä–µ–π–º –ø—É—Å—Ç!')
                link = "https://t.me/G_Veronik"
                escaped_link = link.replace("_", r"\_")  # —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–∏–º–≤–æ–ª –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è

                await bot.send_message(message.chat.id, f"–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã üôÅ\n"
                                     f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –º–µ—Å—Ç–æ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ -> /start\n"
                                     f"–∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –í–µ—Ä–æ–Ω–∏–∫–æ–π.\n\n"
                                     f"–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 9 –¥–Ω–µ–π, –º–æ–∂–Ω–æ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è –Ω–∞ –±–æ–ª–µ–µ –ø–æ–∑–¥–Ω—é—é –¥–∞—Ç—É üòâ\n"
                                     f"–°–≤—è–∂–∏—Ç–µ—Å—å —Å [–í–µ—Ä–æ–Ω–∏–∫–æ–π]({link}) - —á—Ç–æ-–Ω–∏–±—É–¥—å –ø—Ä–∏–¥—É–º–∞–µ–º üëå \n"
                                                        f"{escaped_link}", parse_mode="Markdown")   # –æ–ø—Ü–∏—è parse_mode="Markdown" - –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤ [—Ç–µ–∫—Å—Ç](–Ω—É–∂–Ω—ã–π url) Markdown-—Å–∏–Ω—Ç–∞–∫—Å–∏—Å
                global dt
                dt = []  # –æ—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–∞—Ç –∏ –≤—Ä–µ–º–µ–Ω–∏
                await state.clear()  # –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            else:
                dates = df_final.index
                for date in dates:
                    times = [time for time in df_final.loc[date] if time != '']  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫
                    if times:
                        for time in times:
                            dt.append(f"{date} {time}")

                keyboard_dates_and_times = kb.create_keyboard_dates_and_times(dt)
                await bot.send_message(message.chat.id, f"–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–∂–∏–¥–∞–Ω–∏–µ.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è üìÜüëá",
                                             reply_markup=keyboard_dates_and_times)

@router.message(DateTimeSelection.date_time)
async def process_date_time_choice(message: Message, bot, state: FSMContext):

    global global_state
    global_state = state     # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    global last_message_time_dict
    last_message_time_dict[message.chat.id] = datetime.now()
    global message_shown

    dt_formatted = []                      # —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã –≤ dt —á—Ç–æ–±—ã —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –∏—Ö —Å —Ç–µ–∫—Å—Ç–æ–º –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    for date_time in dt:
        date, time = date_time.split()
        formatted_date = datetime.strptime(date, "%Y-%m-%d").strftime("%d-%m-%Y")
        formatted_date_time = f"{formatted_date} {time}"
        dt_formatted.append(formatted_date_time)

    if message.text not in dt_formatted and message_shown[message.chat.id] == False:
        await bot.send_message(message.chat.id, f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫ üëá")
    elif message_shown[message.chat.id] == True:
        await bot.send_message(message.chat.id,
                               f"–í–∞—Å –Ω–µ –±—ã–ª–æ –±–æ–ª—å—à–µ 5 –º–∏–Ω—É—Ç üíî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–ø–∏—Å—å –∑–∞–Ω–æ–≤–æ \n-> /start")
    else:
        selected_date_time = message.text
        await state.update_data(date_time=selected_date_time)
        await state.set_state(PhoneNumberSelection.phone)

        keyboard_phone = kb.create_keyboard_get_phone()             # –≤—ã–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ö–æ–Ω—Ç–∞–∫—Ç —Ç–µ–ª–µ–≥—Ä–∞–º
        await bot.send_message(message.chat.id, f"–í—ã–±—Ä–∞–Ω—ã –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {selected_date_time}")
        await bot.send_message(message.chat.id, "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø–∏—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚òéÔ∏è üëá", reply_markup=keyboard_phone)

@router.message(PhoneNumberSelection.phone)
async def process_phone_number(message: Message, bot,state: FSMContext):

    global global_state
    global_state = state   # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    global last_message_time_dict
    last_message_time_dict[message.chat.id] = datetime.now()
    global message_shown


    if not message.contact and message_shown[message.chat.id] == False:
        await bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä' üëá")
    elif message_shown[message.chat.id] == True:
        await bot.send_message(message.chat.id,
                               f"–í–∞—Å –Ω–µ –±—ã–ª–æ –±–æ–ª—å—à–µ 5 –º–∏–Ω—É—Ç üíî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–ø–∏—Å—å –∑–∞–Ω–æ–≤–æ \n-> /start")
    else:
        phone_number = message.contact.phone_number              # –ø–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ –ö–æ–Ω—Ç–∞–∫—Ç–∞
        await state.update_data(phone=phone_number)
        await state.set_state(AddNote.add_note)

        # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è –∏–ª–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
        keyboard_add_note = kb.create_keyboard_add_note(add_note_answers)
        await bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –ø–æ–ª—É—á–µ–Ω.\n –•–æ—Ç–∏—Ç–µ –ª–∏ –í—ã –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ –∫ –∑–∞–ø–∏—Å–∏?", reply_markup=keyboard_add_note)

@router.message(AddNote.add_note)                               # –Ω–∞–ª–∏—á–∏–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è: 1 - –¥–∞, 2 - –Ω–µ—Ç
async def button_note_click(message: Message, bot, state: FSMContext):

    global global_state
    global_state = state    # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    global last_message_time_dict
    last_message_time_dict[message.chat.id] = datetime.now()
    global message_shown

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ß–¢–û –≤–≤–µ–ª —é–∑–µ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–µ –≤—ã–ª–µ–∑–∞–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ —Ç–∞–π–º–∞—É—Ç–∞
    if message.text not in add_note_answers and message_shown[message.chat.id] == False:
        await bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö üëá")
    elif message_shown[message.chat.id] == True:
        await bot.send_message(message.chat.id,
                               f"–í–∞—Å –Ω–µ –±—ã–ª–æ –±–æ–ª—å—à–µ 5 –º–∏–Ω—É—Ç üíî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–ø–∏—Å—å –∑–∞–Ω–æ–≤–æ \n-> /start")
    else:
        if message.text == '–í–≤–µ—Å—Ç–∏ –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ':
            await bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ (–¥–æ 60 —Å–∏–º–≤–æ–ª–æ–≤):")
            await state.update_data(add_note=1)
            await state.set_state(AddNote.note)
        elif message.text == "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–ø–∏—Å—å":
            await state.update_data(add_note=2)

            data2 = await state.get_data()       # –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ –∫–ª—é—á–∞–º (–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º)
            procedure = data2["procedure"]
            place = data2["place"]
            date_time = data2["date_time"]
            phone = data2["phone"]
            user_acc = data2["user_acc"]
            user_name = data2["user_name"]
            note = "_"
            user_link = f"https://t.me/{user_acc}"
            escaped_user_link = user_link.replace("_", r"\_")  # —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–∏–º–≤–æ–ª –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è

            for key, value in places_url.items():     # –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –º–µ—Å—Ç–æ-url
                if key == place:                      # –≤—ã–±–∏—Ä–∞–µ–º url –ø–æ –∫–ª—é—á—É –º–µ—Å—Ç–∞
                    url_cow = value


            send_to_db(date_time, procedure, place, phone, user_name, user_link, note)   # –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø–∏—Å–∏ –∑–∞—è–≤–∫–∏ –≤ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
            await bot.send_message(message.chat.id, f"–°–ø–∞—Å–∏–±–æ! üéØ\n–í–µ—Ä–æ–Ω–∏–∫–∞ —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üëç‚òÄÔ∏è‚ù§Ô∏è",reply_markup=kb.ReplyKeyboardRemove())

            message_shown[message.chat.id] = True  # –æ—Ç–º–µ—á–∞–µ–º - –∫–∞–∫ –±—É–¥—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–µ–≤—ã—à–µ–Ω–Ω–æ–º —Ç–∞–π–º–∞—É—Ç–µ –±—ã–ª–æ –ø–æ–∫–∞–∑–∞–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª–æ—Å—å

            now = datetime.now()
            formatted_now = now.strftime("%Y-%m-%d %H:%M:%S")    # —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –±–æ—Ç–æ–º –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –º–∞—Å—Ç–µ—Ä—É –≤ –ª–∏—á–Ω—ã–π —á–∞—Ç
            await bot.send_message(veron_chat_id,
                                   f"{formatted_now} - –ó–∞–ø–∏—Å–∞–ª—Å—è –∫–ª–∏–µ–Ω—Ç: {user_name}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}\n–õ–∏–Ω–∫(TG): {escaped_user_link}\n"
                                   f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏: {date_time}\n–ü—Ä–æ—Ü–µ–¥—É—Ä–∞: {procedure}\n–ú–µ—Å—Ç–æ: [{place}]({url_cow})\n"
                                   f"–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: {note}\n–¢–µ–∫—É—â–µ–µ [—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ]({gsheet_schedule_url})", parse_mode="Markdown")         # –æ–ø—Ü–∏—è parse_mode="Markdown" - –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤ [—Ç–µ–∫—Å—Ç](–Ω—É–∂–Ω—ã–π url) Markdown-—Å–∏–Ω—Ç–∞–∫—Å–∏—Å


            await asyncio.sleep(5)  # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –≤ 5 —Å–µ–∫—É–Ω–¥
            await bot.send_message(message.chat.id, f"–ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –µ—â—ë —Ä–∞–∑, –Ω–∞–∂–º–∏—Ç–µ -> /start  üòò")

            global dt
            dt = []  # –æ—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–∞—Ç –∏ –≤—Ä–µ–º–µ–Ω–∏
            await state.clear()  # –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è

@router.message(AddNote.note)
async def process_note(message: Message, bot, state: FSMContext):

    global global_state
    global_state = state    # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    data0 = await state.get_data()
    add_note = data0["add_note"]
    note = message.text

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    global last_message_time_dict
    last_message_time_dict[message.chat.id] = datetime.now()
    global message_shown

    if len(note) > 60 and add_note == 1 and message_shown[message.chat.id] == False:
        await bot.send_message(message.chat.id, "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ –¥–ª–∏–Ω–æ–π –¥–æ 60 —Å–∏–º–≤–æ–ª–æ–≤ ‚õî")
    elif message_shown[message.chat.id] == True:
        await bot.send_message(message.chat.id,
                               f"–í–∞—Å –Ω–µ –±—ã–ª–æ –±–æ–ª—å—à–µ 5 –º–∏–Ω—É—Ç üíî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–ø–∏—Å—å –∑–∞–Ω–æ–≤–æ \n-> /start")
    elif len(note) <= 60 and add_note == 1 and message_shown[message.chat.id] == False:
        await state.update_data(note=note)

        data3 = await state.get_data()      # –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ –∫–ª—é—á–∞–º (–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º)
        procedure = data3["procedure"]
        place = data3["place"]
        date_time = data3["date_time"]
        phone = data3["phone"]
        user_acc = data3["user_acc"]
        user_name = data3["user_name"]
        if note is not None:
            note = data3["note"]
        else:
            note = "_"
        user_link = f"https://t.me/{user_acc}"
        escaped_user_link = user_link.replace("_", r"\_")  # —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–∏–º–≤–æ–ª –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è

        for key, value in places_url.items():         # –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –º–µ—Å—Ç–æ-url
            if key == place:                          # –≤—ã–±–∏—Ä–∞–µ–º url –ø–æ –∫–ª—é—á—É –º–µ—Å—Ç–∞
                url_cow = value

        # –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø–∏—Å–∏ –∑–∞—è–≤–∫–∏ –≤ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ (Schedule)
        send_to_db(date_time, procedure, place, phone, user_name, user_link, note)
        await bot.send_message(message.chat.id, f"–°–ø–∞—Å–∏–±–æ! üéØ\n–í–µ—Ä–æ–Ω–∏–∫–∞ —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n"
                                                f"–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üëç‚òÄÔ∏è‚ù§Ô∏è", reply_markup=kb.ReplyKeyboardRemove())

        message_shown[message.chat.id] = True   # –æ—Ç–º–µ—á–∞–µ–º - –∫–∞–∫ –±—É–¥—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–µ–≤—ã—à–µ–Ω–Ω–æ–º —Ç–∞–π–º–∞—É—Ç–µ –±—ã–ª–æ –ø–æ–∫–∞–∑–∞–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª–æ—Å—å

        # –æ—Ç–ø—Ä–∞–≤–∫–∞ –±–æ—Ç–æ–º –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –º–∞—Å—Ç–µ—Ä—É –≤ –ª–∏—á–Ω—ã–π —á–∞—Ç
        now = datetime.now()
        formatted_now = now.strftime("%Y-%m-%d %H:%M:%S")
        await bot.send_message(veron_chat_id, f"{formatted_now} - –ó–∞–ø–∏—Å–∞–ª—Å—è –∫–ª–∏–µ–Ω—Ç: {user_name}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}\n–õ–∏–Ω–∫(TG): {escaped_user_link}\n"
                                              f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏: {date_time}\n–ü—Ä–æ—Ü–µ–¥—É—Ä–∞: {procedure}\n–ú–µ—Å—Ç–æ: [{place}]({url_cow})\n"
                                              f"–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: {note}\n–¢–µ–∫—É—â–µ–µ [—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ]({gsheet_schedule_url})", parse_mode="Markdown")     # –æ–ø—Ü–∏—è parse_mode="Markdown" - –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤ [—Ç–µ–∫—Å—Ç](–Ω—É–∂–Ω—ã–π url) Markdown-—Å–∏–Ω—Ç–∞–∫—Å–∏—Å

        await asyncio.sleep(5)  # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –≤ 5 —Å–µ–∫—É–Ω–¥
        await bot.send_message(message.chat.id, f"–ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –µ—â—ë —Ä–∞–∑, –Ω–∞–∂–º–∏—Ç–µ -> /start  üòò")

        global dt
        dt = []  # –æ—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–∞—Ç –∏ –≤—Ä–µ–º–µ–Ω–∏
        await state.clear()  # –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è

@router.message(lambda message: message.text not in ['/start', '/info'])
async def handle_other_messages(message: Message):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –∫—Ä–æ–º–µ "/start" –∏ "/info"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.answer(f"–ü—Ä–æ—Å—Ç–∏—Ç–µ, –º–Ω–µ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –æ–±—â–∞—Ç—å—Å—è –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –∏–ª–∏ –ù–ï –ø–æ —Ç–µ–º–µ.\n"
                             f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –º–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã—à–µ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç üíÅ‚Äç‚ôÇÔ∏è")
# –§-—Ü–∏—è –∑–∞–ø–∏—Å–∏ –∑–∞—è–≤–∫–∏ –≤ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
def send_to_db(date_time, procedure, place, phone, user_name, user_link, note):

    print(procedure)
    print(place)
    print(date_time)
    print(phone)
    print(user_name)
    print(user_link)
    print(note)

    ss.set_schedule(date_time, procedure, place, phone, user_name, user_link, note)
